"""Initial Dev

Revision ID: 5bff05224ac3
Revises: 
Create Date: 2025-09-28 17:54:43.668927

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '5bff05224ac3'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('coins',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('price_now', sa.Float(), nullable=False),
    sa.Column('max_price_now', sa.Float(), nullable=False),
    sa.Column('min_price_now', sa.Float(), nullable=False),
    sa.Column('open_price_now', sa.Float(), nullable=False),
    sa.Column('volume_now', sa.Float(), nullable=False),
    sa.Column('parsed', sa.Boolean(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_coins')),
    sa.UniqueConstraint('name', name=op.f('uq_coins_name'))
    )
    op.create_table('news_urls',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('url', sa.String(length=200), nullable=False),
    sa.Column('a_pup', sa.Float(), nullable=False),
    sa.Column('parsed', sa.Boolean(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_news_urls')),
    sa.UniqueConstraint('url', name=op.f('uq_news_urls_url'))
    )
    op.create_table('newss',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.Column('id_url', sa.BigInteger(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('text', sa.String(length=100000), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_newss'))
    )
    op.create_table('telegram_channels',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('chat_id', sa.String(length=50), nullable=False),
    sa.Column('parsed', sa.Boolean(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_telegram_channels')),
    sa.UniqueConstraint('chat_id', name=op.f('uq_telegram_channels_chat_id')),
    sa.UniqueConstraint('name', name=op.f('uq_telegram_channels_name'))
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('login', sa.String(length=50), nullable=False),
    sa.Column('password', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=50), nullable=False),
    sa.Column('role', sa.String(length=50), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('is_2fa_enabled', sa.Boolean(), nullable=False),
    sa.Column('is_2fa_verified', sa.Boolean(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users')),
    sa.UniqueConstraint('email', name=op.f('uq_users_email')),
    sa.UniqueConstraint('login', name=op.f('uq_users_login'))
    )
    op.create_table('kucoin_api_keys',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('api_key', sa.String(length=50), nullable=False),
    sa.Column('api_secret', sa.String(length=50), nullable=False),
    sa.Column('api_passphrase', sa.String(length=50), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_kucoin_api_keys_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_kucoin_api_keys')),
    sa.UniqueConstraint('api_key', name=op.f('uq_kucoin_api_keys_api_key')),
    sa.UniqueConstraint('api_passphrase', name=op.f('uq_kucoin_api_keys_api_passphrase')),
    sa.UniqueConstraint('api_secret', name=op.f('uq_kucoin_api_keys_api_secret'))
    )
    op.create_table('request_logs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('request_type', sa.String(length=50), nullable=False),
    sa.Column('request_data', sa.String(length=100000), nullable=False),
    sa.Column('response_data', sa.String(length=100000), nullable=False),
    sa.Column('status_code', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_request_logs_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_request_logs'))
    )
    op.create_table('timeseriess',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('coin_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.String(length=50), nullable=False),
    sa.Column('path_dataset', sa.String(length=100), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['coin_id'], ['coins.id'], name=op.f('fk_timeseriess_coin_id_coins')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_timeseriess')),
    sa.UniqueConstraint('path_dataset', name=op.f('uq_timeseriess_path_dataset'))
    )
    op.create_table('data_timeseriess',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('timeseries_id', sa.Integer(), nullable=False),
    sa.Column('datetime', sa.DateTime(), nullable=False),
    sa.Column('open', sa.Float(), nullable=False),
    sa.Column('max', sa.Float(), nullable=False),
    sa.Column('min', sa.Float(), nullable=False),
    sa.Column('close', sa.Float(), nullable=False),
    sa.Column('volume', sa.Float(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['timeseries_id'], ['timeseriess.id'], name=op.f('fk_data_timeseriess_timeseries_id_timeseriess')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_data_timeseriess'))
    )
    op.create_table('kucoin_api_key_request_logs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('kucoin_api_key_id', sa.Integer(), nullable=False),
    sa.Column('request_log_id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['kucoin_api_key_id'], ['kucoin_api_keys.id'], name=op.f('fk_kucoin_api_key_request_logs_kucoin_api_key_id_kucoin_api_keys')),
    sa.ForeignKeyConstraint(['request_log_id'], ['request_logs.id'], name=op.f('fk_kucoin_api_key_request_logs_request_log_id_request_logs')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_kucoin_api_key_request_logs'))
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('kucoin_api_key_request_logs')
    op.drop_table('data_timeseriess')
    op.drop_table('timeseriess')
    op.drop_table('request_logs')
    op.drop_table('kucoin_api_keys')
    op.drop_table('users')
    op.drop_table('telegram_channels')
    op.drop_table('newss')
    op.drop_table('news_urls')
    op.drop_table('coins')
    # ### end Alembic commands ###
